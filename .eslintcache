[{"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\base-react-hook-tutorial\\src\\index.js":"1","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\base-react-hook-tutorial\\src\\App.js":"2","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\base-react-hook-tutorial\\src\\reportWebVitals.js":"3","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\index.js":"4","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\App.js":"5","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\reportWebVitals.js":"6","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\Navigation\\Nav.js":"7","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\Login\\Login.js":"8","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\Register\\Register.js":"9","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\services\\userService.js":"10","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\ManageUsers\\Users.js":"11","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\routes\\AppRoute.js":"12","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\routes\\PrivateRoutes.js":"13","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\ManageUsers\\ModalDelete.js":"14","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\ManageUsers\\ModalUser.js":"15","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\setup\\axios.js":"16"},{"size":517,"mtime":1710817469506,"results":"17","hashOfConfig":"18"},{"size":538,"mtime":1710817469499,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1710817469511,"results":"20","hashOfConfig":"18"},{"size":591,"mtime":1712569851468,"results":"21","hashOfConfig":"22"},{"size":1078,"mtime":1712026122337,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1710817469511,"results":"24","hashOfConfig":"22"},{"size":807,"mtime":1712029288565,"results":"25","hashOfConfig":"22"},{"size":4505,"mtime":1712655306116,"results":"26","hashOfConfig":"22"},{"size":6682,"mtime":1712631135932,"results":"27","hashOfConfig":"22"},{"size":1041,"mtime":1712655287639,"results":"28","hashOfConfig":"22"},{"size":8807,"mtime":1712631127437,"results":"29","hashOfConfig":"22"},{"size":1153,"mtime":1712028020184,"results":"30","hashOfConfig":"22"},{"size":630,"mtime":1712029394182,"results":"31","hashOfConfig":"22"},{"size":894,"mtime":1712215477589,"results":"32","hashOfConfig":"22"},{"size":9198,"mtime":1712631105929,"results":"33","hashOfConfig":"22"},{"size":544,"mtime":1712655182876,"results":"34","hashOfConfig":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11apz04",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"hrfq60",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\base-react-hook-tutorial\\src\\index.js",[],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\base-react-hook-tutorial\\src\\App.js",[],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\base-react-hook-tutorial\\src\\reportWebVitals.js",[],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\index.js",[],["74","75"],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\App.js",["76"],"import { BrowserRouter as Router } from 'react-router-dom';\r\nimport Nav from \"./components/Navigation/Nav\";\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useEffect, useState } from 'react';\r\nimport AppRoutes from './routes/AppRoute';\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState({});\r\n\r\n  useEffect(() => {\r\n    let session = sessionStorage.getItem('account');\r\n\r\n    if (session) {\r\n      setAccount(JSON.parse(session));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div className='add-header'>\r\n          <Nav />\r\n        </div>\r\n        <div className=\"app-container\">\r\n          <AppRoutes />\r\n        </div>\r\n\r\n        <ToastContainer\r\n          position=\"bottom-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n          theme=\"light\" />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\reportWebVitals.js",[],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\Navigation\\Nav.js",["77"],"import React, { useEffect, useState } from 'react';\r\nimport \"./Nav.scss\";\r\nimport {\r\n    NavLink,\r\n    useLocation\r\n} from 'react-router-dom';\r\n\r\nconst Nav = (props) => {\r\n    const [isShow, setIsShow] = useState(true);\r\n    let location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (location.pathname === '/login') {\r\n            setIsShow(false)\r\n        }\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            {isShow === true &&\r\n                <div className=\"topnav\">\r\n                    <NavLink to=\"/\" exact>Home</NavLink>\r\n                    <NavLink to=\"/users\">Users</NavLink>\r\n                    <NavLink to=\"/projects\">Projects</NavLink>\r\n                    <NavLink to=\"/about\">About</NavLink>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Nav;","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\Login\\Login.js",["78","79","80"],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\Register\\Register.js",["81","82","83"],"import './Register.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { registerNewUser } from '../../services/userService';\r\n\r\nconst Register = (props) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const defaultValidInput = {\r\n        isValidEmail: true,\r\n        isValidPhone: true,\r\n        isValidPassword: true,\r\n        isValidConfirmPassword: true,\r\n    }\r\n\r\n    const [objCheckInput, setObjCheckInput] = useState(defaultValidInput);\r\n\r\n    let history = useHistory();\r\n    const handleLogin = () => {\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    const isValidInputs = () => {\r\n        setObjCheckInput(defaultValidInput);\r\n\r\n        if (!email) {\r\n            toast.error(\"Email is required\");\r\n            setObjCheckInput({\r\n                ...defaultValidInput,\r\n                isValidEmail: false\r\n            })\r\n            return false;\r\n        }\r\n\r\n        let regx = /\\S+@\\S+\\.\\S+/;\r\n        if (!regx.test(email)) {\r\n            setObjCheckInput({\r\n                ...defaultValidInput,\r\n                isValidEmail: false\r\n            })\r\n            toast.error(\"Please enter a valid email address\");\r\n            return false;\r\n        }\r\n\r\n        if (!phone) {\r\n            toast.error(\"Phone is required\");\r\n            setObjCheckInput({\r\n                ...defaultValidInput,\r\n                isValidPhone: false\r\n            })\r\n            return false;\r\n        }\r\n\r\n        if (!password) {\r\n            toast.error(\"Password is required\");\r\n            setObjCheckInput({\r\n                ...defaultValidInput,\r\n                isValidPassword: false\r\n            })\r\n            return false;\r\n        }\r\n\r\n        if (password != confirmPassword) {\r\n            toast.error(\"Your password is not the same\");\r\n            setObjCheckInput({\r\n                ...defaultValidInput,\r\n                isValidConfirmPassword: false\r\n            })\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const handleRegister = async () => {\r\n        let check = isValidInputs();\r\n\r\n        if (check === true) {\r\n            let response = await registerNewUser(email, phone, username, password);\r\n            let serverData = response;\r\n\r\n            if (+serverData.EC === 0) {\r\n                toast.success(serverData.EM);\r\n                history.push(\"/login\");\r\n            } else {\r\n                toast.error(serverData.EM);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <div className=\"container\">\r\n                <div className=\"row px-3 px-sm-0\">\r\n                    <div className=\"content-left col-12 col-sm-7 d-none d-sm-block\">\r\n                        <div className='brand'>\r\n                            FaceMinh\r\n                        </div>\r\n\r\n                        <div className='detail'>\r\n                            FaceMinh helps you connect and share with the people in your life.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"content-right col-12 col-sm-5 d-flex flex-column gap-3 py-3 mx-sm-0 mx-3\">\r\n                        <div className='brand d-sm-none'>\r\n                            FaceMinh\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label>Email:</label>\r\n                            <input type='text'\r\n                                className={objCheckInput.isValidEmail ? 'form-control' : 'form-control is-invalid'}\r\n                                placeholder='Email address'\r\n                                value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label>Phone number:</label>\r\n                            <input type='text'\r\n                                className={objCheckInput.isValidPhone ? 'form-control' : 'form-control is-invalid'}\r\n                                placeholder='Phone number'\r\n                                value={phone} onChange={(event) => setPhone(event.target.value)} />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label>User name:</label>\r\n                            <input type='text'\r\n                                className='form-control'\r\n                                placeholder='User name'\r\n                                value={username} onChange={(event) => setUsername(event.target.value)} />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label>Password:</label>\r\n                            <input\r\n                                type='password'\r\n                                className={objCheckInput.isValidPassword ? 'form-control' : 'form-control is-invalid'}\r\n                                placeholder='Password'\r\n                                value={password} onChange={(event) => setPassword(event.target.value)} />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label>Re-enter password:</label>\r\n                            <input type='password'\r\n                                className={objCheckInput.isValidConfirmPassword ? 'form-control' : 'form-control is-invalid'}\r\n                                placeholder='Re-enter password'\r\n                                value={confirmPassword} onChange={(event) => setConfirmPassword(event.target.value)} />\r\n                        </div>\r\n\r\n                        <button className='btn btn-primary' type='button'\r\n                            onClick={() => handleRegister()}>Register</button>\r\n\r\n                        <hr />\r\n                        <div className='text-center'>\r\n                            <button className='btn btn-success' type='button' onClick={() => handleLogin()}>\r\n                                Already have an account. Login\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\services\\userService.js",[],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\ManageUsers\\Users.js",["84","85","86"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { fetchAllUser, deleteUser } from \"../../services/userService\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport { toast } from 'react-toastify';\r\nimport ModalDelete from \"./ModalDelete\";\r\nimport ModalUser from \"./ModalUser\";\r\nimport './Users.scss'\r\n\r\nconst Users = (props) => {\r\n    const [listUsers, setListUsers] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentLimit, setCurrentLimit] = useState(3);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    //Modal Delete\r\n    const [isShowModalDelete, setIsShowModalDelete] = useState(false);\r\n    const [dataModal, setDataModal] = useState({});\r\n\r\n    //Modal Update/Create\r\n    const [isShowModalUser, setIsShowModalUser] = useState(false);\r\n    const [actionModalUser, setActionModalUser] = useState(\"CREATE\");\r\n    const [dataModalUser, setDataModalUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [currentPage]);\r\n\r\n    const fetchUsers = async () => {\r\n        let response = await fetchAllUser(currentPage, currentLimit);\r\n        if (response && response.EC === 0) {\r\n            setTotalPages(response.DT.totalPages);\r\n            setListUsers(response.DT.users);\r\n        }\r\n    }\r\n\r\n    const handlePageClick = async (event) => {\r\n        setCurrentPage(+event.selected + 1)\r\n    };\r\n\r\n    const handleDeleteUser = async (user) => {\r\n        setDataModal(user);\r\n        setIsShowModalDelete(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setIsShowModalDelete(false);\r\n        setDataModal({});\r\n    }\r\n\r\n    const confirmDeleteUser = async () => {\r\n        let response = await deleteUser(dataModal);\r\n\r\n        if (response && +response.EC === 0) {\r\n            toast.success(response.EM);\r\n            await fetchUsers();\r\n        } else {\r\n            toast.error(response.EM);\r\n        }\r\n        setIsShowModalDelete(false);\r\n    }\r\n\r\n    const onHideModalUser = async () => {\r\n        setIsShowModalUser(false);\r\n        setDataModalUser({});\r\n        await fetchUsers();\r\n    }\r\n\r\n    const handleEditUser = (user) => {\r\n        setActionModalUser(\"UPDATE\");\r\n        setDataModalUser(user);\r\n        setIsShowModalUser(true);\r\n    }\r\n\r\n    const handleRefresh = async () => {\r\n        await fetchUsers();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"manage-users-container\">\r\n                    <div className=\"user-header\">\r\n                        <div>\r\n                            <div className=\"title mt-3\">\r\n                                <h3>Manage users</h3>\r\n                            </div>\r\n\r\n                            <div className=\"actions my-3\">\r\n                                <button\r\n                                    onClick={() => handleRefresh()}\r\n                                    className=\"btn btn-success me-4\">\r\n                                    <i className=\"fa fa-refresh\"></i>Refresh\r\n                                </button>\r\n\r\n                                <button className=\"btn btn-primary\"\r\n                                    onClick={() => {\r\n                                        setIsShowModalUser(true);\r\n                                        setActionModalUser(\"CREATE\");\r\n                                    }}>\r\n                                    <i className=\"fa fa-plus-circle\"></i>\r\n                                    Add new user\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"user-body\">\r\n                            <table className=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">No.</th>\r\n                                        <th scope=\"col\">Id</th>\r\n                                        <th scope=\"col\">Email</th>\r\n                                        <th scope=\"col\">User name</th>\r\n                                        <th scope=\"col\">Group</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {listUsers && listUsers.length > 0 ?\r\n                                        <>\r\n                                            {listUsers.map((item, index) => {\r\n                                                return (\r\n                                                    <tr key={`row-${index}`}>\r\n                                                        <td>{(currentPage - 1) * currentLimit + index + 1}</td>\r\n                                                        <td>{item.id}</td>\r\n                                                        <td>{item.email}</td>\r\n                                                        <td>{item.username}</td>\r\n                                                        <td>{item.Group ? item.Group.name : ''}</td>\r\n                                                        <td>\r\n                                                            <span\r\n                                                                title=\"Edit\"\r\n                                                                className=\"edit\"\r\n                                                                onClick={() => handleEditUser(item)}>\r\n                                                                <i className=\"fa fa-pencil\"></i>\r\n                                                            </span>\r\n                                                            <span\r\n                                                                title=\"Delete\"\r\n                                                                className=\"delete\"\r\n                                                                onClick={() => handleDeleteUser(item)}>\r\n                                                                <i className=\"fa fa-trash\"></i>\r\n                                                            </span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <tr><td>Not found users</td></tr>\r\n                                        </>\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        {totalPages > 0 &&\r\n                            <div className=\"user-footer\">\r\n\r\n                                <ReactPaginate\r\n                                    nextLabel=\"next >\"\r\n                                    onPageChange={handlePageClick}\r\n                                    pageRangeDisplayed={3}\r\n                                    marginPagesDisplayed={2}\r\n                                    pageCount={totalPages}\r\n                                    previousLabel=\"< previous\"\r\n                                    pageClassName=\"page-item\"\r\n                                    pageLinkClassName=\"page-link\"\r\n                                    previousClassName=\"page-item\"\r\n                                    previousLinkClassName=\"page-link\"\r\n                                    nextClassName=\"page-item\"\r\n                                    nextLinkClassName=\"page-link\"\r\n                                    breakLabel=\"...\"\r\n                                    breakClassName=\"page-item\"\r\n                                    breakLinkClassName=\"page-link\"\r\n                                    containerClassName=\"pagination\"\r\n                                    activeClassName=\"active\"\r\n                                    renderOnZeroPageCount={null}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n            <ModalDelete\r\n                show={isShowModalDelete}\r\n                handleClose={handleClose}\r\n                confirmDeleteUser={confirmDeleteUser}\r\n                dataModal={dataModal}\r\n            />\r\n\r\n            <ModalUser\r\n                show={isShowModalUser}\r\n                onHide={onHideModalUser}\r\n                action={actionModalUser}\r\n                dataModalUser={dataModalUser}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users;","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\routes\\AppRoute.js",[],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\routes\\PrivateRoutes.js",["87"],"import {\r\n    Route,\r\n} from 'react-router-dom';\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PrivateRoutes = (props) => {\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        let session = sessionStorage.getItem('account');\r\n\r\n        if (!session) {\r\n            history.push(\"/login\");\r\n            window.location.reload();\r\n        }\r\n\r\n        if (session) {\r\n            //check role\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Route path={props.path} component={props.component} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrivateRoutes;","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\ManageUsers\\ModalDelete.js",[],"D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\components\\ManageUsers\\ModalUser.js",["88","89","90"],"import Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useState, useEffect } from 'react';\r\nimport { fetchGroups, createNewUser, updateCurrentUser } from '../../services/userService';\r\nimport { toast } from 'react-toastify';\r\nimport _ from \"lodash\";\r\n\r\nconst ModalUser = (props) => {\r\n\r\n    const { action, dataModalUser } = props;\r\n\r\n    const defaultUserData = {\r\n        email: '',\r\n        phone: '',\r\n        username: '',\r\n        password: '',\r\n        address: '',\r\n        gender: '',\r\n        group: ''\r\n    }\r\n\r\n    const validInputsDefault = {\r\n        email: true,\r\n        phone: true,\r\n        username: true,\r\n        password: true,\r\n        address: true,\r\n        gender: true,\r\n        group: true,\r\n    }\r\n\r\n    const [userData, setUserData] = useState(defaultUserData);\r\n    const [validInputs, setValidInputs] = useState(validInputsDefault);\r\n    const [userGroups, setUserGroup] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getGroups();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (action === \"UPDATE\") {\r\n            setUserData({ ...dataModalUser, group: dataModalUser.Group ? dataModalUser.Group.id : '' })\r\n        }\r\n    }, [dataModalUser]);\r\n\r\n    useEffect(() => {\r\n        if (action === \"CREATE\") {\r\n            if (userGroups && userGroups.length > 0) {\r\n                setUserData({ ...userData, group: userGroups[0].id })\r\n            }\r\n        }\r\n    }, [action]);\r\n\r\n    const getGroups = async () => {\r\n        let res = await fetchGroups();\r\n\r\n        if (res && res.EC === 0) {\r\n            setUserGroup(res.DT);\r\n\r\n            if (res.DT && res.DT.length > 0) {\r\n                let group = res.DT;\r\n                setUserData({ ...userData, group: group[0].id })\r\n            }\r\n        } else {\r\n            toast.error(res.EM);\r\n        }\r\n    }\r\n\r\n    const handleOnchangeInput = (value, name) => {\r\n        let _userData = _.cloneDeep(userData);\r\n        _userData[name] = value;\r\n        setUserData(_userData);\r\n\r\n    }\r\n\r\n    const checkValidateInputs = () => {\r\n        //create user\r\n        if (action === 'UPDATE') {\r\n            return true;\r\n        }\r\n        setValidInputs(validInputsDefault);\r\n\r\n        let arr = [\r\n            'email',\r\n            'phone',\r\n            'password',\r\n            'group'\r\n        ]\r\n\r\n        let check = true;\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (!userData[arr[i]]) {\r\n                let _validInputs = _.cloneDeep(validInputsDefault);\r\n                _validInputs[arr[i]] = false;\r\n                setValidInputs(_validInputs);\r\n\r\n                toast.error(`Empty input ${arr[i]}`);\r\n                check = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return check;\r\n    }\r\n\r\n    const handleConfirmUser = async () => {\r\n\r\n        //create user\r\n        let check = checkValidateInputs();\r\n        if (check === true) {\r\n            let res = action === 'CREATE'\r\n                ? await createNewUser({ ...userData, groupId: userData['group'] })\r\n                : await updateCurrentUser({ ...userData, groupId: userData['group'] })\r\n\r\n            if (res && res.EC === 0) {\r\n                toast.success(`User create success !`);\r\n                props.onHide();\r\n                setUserData({\r\n                    ...defaultUserData,\r\n                    group: userGroups && userGroups.length > 0 ? userGroups[0].id : ''\r\n                });\r\n            }\r\n\r\n            if (res && res.EC !== 0) {\r\n                toast.error(res.EM);\r\n                let _validInputs = _.cloneDeep(validInputsDefault);\r\n                _validInputs[res.DT] = false;\r\n                setValidInputs(_validInputs);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCloseModalUser = () => {\r\n        props.onHide();\r\n        setUserData(defaultUserData);\r\n        setValidInputs(validInputsDefault);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={props.show} onHide={() => handleCloseModalUser()} className='modal-user'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        <span>{props.action === 'CREATE' ? 'Create new user' : 'Edit user'}</span>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='content-body row'>\r\n                        <div className='col-12 col-sm-6 form-group'>\r\n                            <label>Email address (<span className='red'>*</span>) :</label>\r\n\r\n                            <input disabled={action === 'CREATE' ? false : true}\r\n                                className={validInputs.email ? 'form-control' : 'form-control is-invalid'}\r\n                                type='email'\r\n                                value={userData.email}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"email\")} />\r\n                        </div>\r\n\r\n                        <div className='col-12 col-sm-6 form-group'>\r\n                            <label>Phone number (<span className='red'>*</span>) :</label>\r\n                            <input disabled={action === 'CREATE' ? false : true}\r\n                                className={validInputs.phone ? 'form-control' : 'form-control is-invalid'}\r\n                                type='text'\r\n                                value={userData.phone}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"phone\")} />\r\n                        </div>\r\n\r\n                        <div className='col-12 col-sm-6 form-group'>\r\n                            <label>Username:</label>\r\n                            <input className='form-control' type='text'\r\n                                value={userData.username}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"username\")} />\r\n                        </div>\r\n\r\n                        <div className='col-12 col-sm-6 form-group'>\r\n                            {action === 'CREATE'\r\n                                &&\r\n                                <>\r\n                                    <label>Password (<span className='red'>*</span>) :</label>\r\n                                    <input className={validInputs.password ? 'form-control' : 'form-control is-invalid'}\r\n                                        type='password'\r\n                                        value={userData.password}\r\n                                        onChange={(event) => handleOnchangeInput(event.target.value, \"password\")} />\r\n                                </>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className='col-12 col-sm-12 form-group'>\r\n                            <label>Address:</label>\r\n                            <input className='form-control' type='text'\r\n                                value={userData.address}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"address\")} />\r\n                        </div>\r\n\r\n                        <div className='col-12 col-sm-6 form-group'>\r\n                            <label>Gender: </label>\r\n                            <select className='form-select'\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"gender\")}\r\n                                value={userData.gender}>\r\n\r\n                                <option defaultValue=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Other\">Other</option>\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className='col-12 col-sm-6 form-group'>\r\n                            <label>Group (<span className='red'>*</span>) :</label>\r\n                            <select className={validInputs.group ? 'form-select' : 'form-select is-invalid'}\r\n                                onChange={(event) => handleOnchangeInput(event.target.value, \"group\")}\r\n                                value={userData.group}>\r\n\r\n                                {userGroups.length > 0 &&\r\n                                    userGroups.map((item, index) => {\r\n                                        return (\r\n                                            <option key={`group-${index}`} value={item.id}>{item.name}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => handleCloseModalUser()}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={() => handleConfirmUser()}>\r\n                        {action === 'CREATE' ? 'Save' : 'Update'}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalUser;","D:\\Minh\\Minh's App\\NodeJS App\\Hoi dan IT course\\jwt-course\\jwt-frontend\\src\\setup\\axios.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":9,"column":10,"nodeType":"97","messageId":"98","endLine":9,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":17,"column":8,"nodeType":"101","endLine":17,"endColumn":10,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"103","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":78,"column":8,"nodeType":"101","endLine":78,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":114,"column":29,"nodeType":"108","endLine":114,"endColumn":69},{"ruleId":"95","severity":1,"message":"103","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"95","severity":1,"message":"109","line":4,"column":8,"nodeType":"97","messageId":"98","endLine":4,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":70,"column":22,"nodeType":"112","messageId":"113","endLine":70,"endColumn":24},{"ruleId":"95","severity":1,"message":"114","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":20},{"ruleId":"95","severity":1,"message":"115","line":13,"column":26,"nodeType":"97","messageId":"98","endLine":13,"endColumn":41},{"ruleId":"99","severity":1,"message":"116","line":27,"column":8,"nodeType":"101","endLine":27,"endColumn":21,"suggestions":"117"},{"ruleId":"99","severity":1,"message":"104","line":22,"column":8,"nodeType":"101","endLine":22,"endColumn":10,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"119","line":38,"column":8,"nodeType":"101","endLine":38,"endColumn":10,"suggestions":"120"},{"ruleId":"99","severity":1,"message":"121","line":44,"column":8,"nodeType":"101","endLine":44,"endColumn":23,"suggestions":"122"},{"ruleId":"99","severity":1,"message":"123","line":52,"column":8,"nodeType":"101","endLine":52,"endColumn":16,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["128"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'setCurrentLimit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["129"],["130"],"React Hook useEffect has a missing dependency: 'getGroups'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'userData' and 'userGroups'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUserData' needs the current value of 'userGroups'.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"136","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [location.pathname]",{"range":"147","text":"148"},"Update the dependencies array to be: [history]",{"range":"149","text":"150"},"Update the dependencies array to be: [currentPage, fetchUsers]",{"range":"151","text":"152"},{"range":"153","text":"150"},"Update the dependencies array to be: [getGroups]",{"range":"154","text":"155"},"Update the dependencies array to be: [action, dataModalUser]",{"range":"156","text":"157"},"Update the dependencies array to be: [action, userData, userGroups]",{"range":"158","text":"159"},[378,380],"[location.pathname]",[2181,2183],"[history]",[1037,1050],"[currentPage, fetchUsers]",[474,476],[1018,1020],"[getGroups]",[1208,1223],"[action, dataModalUser]",[1448,1456],"[action, userData, userGroups]"]